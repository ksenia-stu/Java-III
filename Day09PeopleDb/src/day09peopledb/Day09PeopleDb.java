/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package day09peopledb;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.ArrayList;

/**
 *
 * @author user
 */
public class Day09PeopleDb extends javax.swing.JFrame {

    
    DefaultListModel<Person> modelPeopleList = new DefaultListModel<>();
    
    //create instance of class Database
    Database db;
    
    /**
     * Creates new form Day09PeopleDb
     */
    public Day09PeopleDb() {
        initComponents();
        try
        {
          db = new Database();  
        }
        catch(SQLException ex)
        {
            ex.printStackTrace(); //user cant see it, just in console (to resolve error)
            //it is a fatal error if it cant connect to database
            JOptionPane.showMessageDialog(this, "Failed to connect to database",
                 "Database error",JOptionPane.ERROR_MESSAGE);
            System.exit(1);
        }
        loadPeopleFromDatabase();
    }
    
    void loadPeopleFromDatabase()
    {
        try
        {
           ArrayList<Person> list= db.getAllPeople();
           modelPeopleList.clear();
           modelPeopleList.addAll(list);
        }
        catch(SQLException ex)
        {
            ex.printStackTrace(); //user cant see it, just in console (to resolve error)
            //it is a fatal error if it cant connect to database
            JOptionPane.showMessageDialog(this, "Failed to get all people",
                 "Database error",JOptionPane.ERROR_MESSAGE);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstPeople = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        spinAge = new javax.swing.JSpinner();
        btAdd = new javax.swing.JButton();
        btUpdate = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        lstPeople.setModel(modelPeopleList);
        lstPeople.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstPeople.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstPeopleValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstPeople);

        jLabel1.setText("Id:");

        jLabel2.setText("Name:");

        jLabel3.setText("Age:");

        lblId.setText("-");

        btAdd.setText("Add");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btUpdate.setText("Update");
        btUpdate.setEnabled(false);
        btUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateActionPerformed(evt);
            }
        });

        btDelete.setText("Delete");
        btDelete.setEnabled(false);
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(spinAge, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                    .addComponent(tfName)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btDelete)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(lblId))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(spinAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btAdd)
                            .addComponent(btUpdate)
                            .addComponent(btDelete))))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
       
        //first we add data to the database after that we refresh the list to load it to model
        
        String name = tfName.getText();
        //need to verify name length and content
        
        int age = (Integer)spinAge.getValue();
        //need to verify that age value is between 0 and 150
        
        try
        {
          db.addPerson(new Person(0, name, age));
          tfName.setText("");
          spinAge.setValue(0);
          
          //refresh model to display new records
          loadPeopleFromDatabase();
        }
        catch(SQLException ex)
        {
            ex.printStackTrace(); //user cant see it, just in console (to resolve error)
            //it is a fatal error if it cant connect to database
            JOptionPane.showMessageDialog(this, "Failed to add record",
                 "Database error",JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_btAddActionPerformed

    private void btUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateActionPerformed
     try
     {
          int id = Integer.parseInt(lblId.getText());
        String name = tfName.getText();
        int age = (Integer)spinAge.getValue();

        Person p = new Person(id, name, age);

        db.updatePerson(p);
        loadPeopleFromDatabase();
     }
     catch(SQLException ex)
        {
            ex.printStackTrace(); //user cant see it, just in console (to resolve error)
            //it is a fatal error if it cant connect to database
            JOptionPane.showMessageDialog(this, "Failed to update record",
                 "Database error",JOptionPane.ERROR_MESSAGE);
        }
     catch(NumberFormatException ex)
     {
         ex.printStackTrace(); //user cant see it, just in console (to resolve error)
            //it is a fatal error if it cant connect to database
            JOptionPane.showMessageDialog(this, ex.getMessage(),
                 "Internal error",JOptionPane.ERROR_MESSAGE);
     }
     
       
     
    }//GEN-LAST:event_btUpdateActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
       try
       {
          db.deletePerson(lstPeople.getSelectedValue().id);
        loadPeopleFromDatabase(); 
       }
       catch(SQLException ex)
        {
            ex.printStackTrace(); //user cant see it, just in console (to resolve error)
            //it is a fatal error if it cant connect to database
            JOptionPane.showMessageDialog(this, "Failed to delete record",
                 "Database error",JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_btDeleteActionPerformed

    private void lstPeopleValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstPeopleValueChanged
     Person p = lstPeople.getSelectedValue();
     
     if(p != null)
     {
         lblId.setText(p.id+"");
         tfName.setText(p.name);
         spinAge.setValue(p.age);
         btUpdate.setEnabled(true);
         btDelete.setEnabled(true);
     }
     else
     {
         lblId.setText("-");
         tfName.setText("");
         spinAge.setValue(0);
         btUpdate.setEnabled(false);
         btDelete.setEnabled(false);
     }
    }//GEN-LAST:event_lstPeopleValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Day09PeopleDb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Day09PeopleDb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Day09PeopleDb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Day09PeopleDb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Day09PeopleDb().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblId;
    private javax.swing.JList<Person> lstPeople;
    private javax.swing.JSpinner spinAge;
    private javax.swing.JTextField tfName;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package day01multitempinput;

import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class Day01MultiTempInput extends javax.swing.JFrame {

    /**
     * Creates new form Day01MultiTempInput
     */
    public Day01MultiTempInput() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        lblInput = new javax.swing.JLabel();
        tfInput = new javax.swing.JTextField();
        lblInputScale = new javax.swing.JLabel();
        rbInputScaleCelcius = new javax.swing.JRadioButton();
        rbInputScaleFarenheit = new javax.swing.JRadioButton();
        rbInputScaleKelvin = new javax.swing.JRadioButton();
        lblOutputScale = new javax.swing.JLabel();
        lblOutput = new javax.swing.JLabel();
        tfOutput = new javax.swing.JTextField();
        rbOutputScaleCelcius = new javax.swing.JRadioButton();
        rbOutputScaleFarenheit = new javax.swing.JRadioButton();
        rbOutputScaleKelvin = new javax.swing.JRadioButton();
        btConvert = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        lblInput.setText("Input");

        tfInput.setText("0");
        tfInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfInputActionPerformed(evt);
            }
        });

        lblInputScale.setText("Input Scale");

        buttonGroup1.add(rbInputScaleCelcius);
        rbInputScaleCelcius.setSelected(true);
        rbInputScaleCelcius.setText("Celcius");

        buttonGroup1.add(rbInputScaleFarenheit);
        rbInputScaleFarenheit.setText("Farenheit");

        buttonGroup1.add(rbInputScaleKelvin);
        rbInputScaleKelvin.setText("Kelvin");

        lblOutputScale.setText("Output Scale");

        lblOutput.setText("Output");

        buttonGroup2.add(rbOutputScaleCelcius);
        rbOutputScaleCelcius.setSelected(true);
        rbOutputScaleCelcius.setText("Celcius");

        buttonGroup2.add(rbOutputScaleFarenheit);
        rbOutputScaleFarenheit.setText("Farenheit");

        buttonGroup2.add(rbOutputScaleKelvin);
        rbOutputScaleKelvin.setText("Kelvin");
        rbOutputScaleKelvin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbOutputScaleKelvinActionPerformed(evt);
            }
        });

        btConvert.setText("Convert");
        btConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConvertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblInput)
                                .addGap(18, 18, 18)
                                .addComponent(tfInput, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btConvert))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblOutput)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(195, 195, 195))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(lblInputScale))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbInputScaleFarenheit)
                            .addComponent(rbInputScaleCelcius)
                            .addComponent(rbInputScaleKelvin))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblOutputScale)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbOutputScaleKelvin)
                            .addComponent(rbOutputScaleCelcius)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(rbOutputScaleFarenheit)))
                .addGap(97, 97, 97))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInput)
                    .addComponent(tfInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInputScale)
                    .addComponent(lblOutputScale))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbInputScaleCelcius)
                            .addComponent(rbOutputScaleCelcius))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbOutputScaleFarenheit)
                            .addComponent(rbInputScaleFarenheit))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btConvert)
                        .addGap(20, 20, 20)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbOutputScaleKelvin, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbInputScaleKelvin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOutput)
                    .addComponent(tfOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tfInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfInputActionPerformed
      
     
      
      
      
      
   
    }//GEN-LAST:event_tfInputActionPerformed

    private void rbOutputScaleKelvinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbOutputScaleKelvinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbOutputScaleKelvinActionPerformed

    private void btConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConvertActionPerformed
        
      // to check if input is numerical
      try {
         Double.parseDouble(tfInput.getText());
      } catch (NumberFormatException e) {
         JOptionPane.showMessageDialog(this,"Input must be numerical and not empty", "Input error",
                    JOptionPane.ERROR_MESSAGE);
      }
      
      //to check if 1 radio box is selected on both sides
      if(!rbInputScaleCelcius.isSelected() && !rbInputScaleFarenheit.isSelected() && !rbInputScaleKelvin.isSelected())
      {
          //internal error
         JOptionPane.showMessageDialog(this, "Unable to find selected radio button", "Internal error",JOptionPane.ERROR_MESSAGE);
      }
      //to check if 1 radio box is selected on both sides
      if(!rbOutputScaleCelcius.isSelected() && !rbOutputScaleFarenheit.isSelected() && !rbScaleKelvin.isSelected())
      {
          //internal error
         JOptionPane.showMessageDialog(this, "Unable to find selected radio button", "Internal error",JOptionPane.ERROR_MESSAGE);
      }
      
      double result = 0;
      //C to C,F,K
         //C to C
      if (rbInputScaleCelcius.isSelected() && rbOutputScaleCelcius.isSelected())
      {
          result = Double.parseDouble(tfInput.getText());
          tfOutput.setText(String.format("%.2f°C",(result)));  
        
      }
      //C to F
      else if(rbInputScaleCelcius.isSelected() && rbOutputScaleFarenheit.isSelected())
      {
          result = (Double.parseDouble(tfInput.getText())*9/5)+32;
          tfOutput.setText(String.format("%.2f°F",(result)));       
      }
      //C to K
      else if(rbInputScaleCelcius.isSelected() && rbOutputScaleKelvin.isSelected())
      {
          result = Double.parseDouble(tfInput.getText()) + 273.15;
          tfOutput.setText(String.format("%.2f°K",(result)));       
      }

      
      //F to C,F,K
         //F to C
      if (rbInputScaleFarenheit.isSelected() && rbOutputScaleCelcius.isSelected())
      {
          result = (Double.parseDouble(tfInput.getText()) - 32)*5/9;            
          tfOutput.setText(String.format("%.2f°C",(result)));  
        
      }
      //F to F
      else if(rbInputScaleFarenheit.isSelected() && rbOutputScaleFarenheit.isSelected())
      {
          result = Double.parseDouble(tfInput.getText());
          tfOutput.setText(String.format("%.2f°F",(result)));       
      }
      //F to K
      else if(rbInputScaleFarenheit.isSelected() && rbOutputScaleKelvin.isSelected())
      {
          result = (Double.parseDouble(tfInput.getText()) - 32)*5/9 + 273.15;
          tfOutput.setText(String.format("%.2f°K",(result)));       
      }
      
      
       //K to C,F,K
         //K to C
      if (rbInputScaleKelvin.isSelected() && rbOutputScaleCelcius.isSelected())
      {
          result = Double.parseDouble(tfInput.getText()) - 273.15;          
          tfOutput.setText(String.format("%.2f°C",(result)));  
        
      }
      //K to F
      else if(rbInputScaleKelvin.isSelected() && rbOutputScaleFarenheit.isSelected())
      {
          result = (Double.parseDouble(tfInput.getText()) - 273.15)*5/9 +32;                         
          tfOutput.setText(String.format("%.2f°F",(result)));       
      }
      //K to K
      else if(rbInputScaleKelvin.isSelected() && rbOutputScaleKelvin.isSelected())
      {
          result = Double.parseDouble(tfInput.getText());
          tfOutput.setText(String.format("%.2f°K",(result)));       
      }

        
    }//GEN-LAST:event_btConvertActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Day01MultiTempInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Day01MultiTempInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Day01MultiTempInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Day01MultiTempInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Day01MultiTempInput().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btConvert;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel lblInput;
    private javax.swing.JLabel lblInputScale;
    private javax.swing.JLabel lblOutput;
    private javax.swing.JLabel lblOutputScale;
    private javax.swing.JRadioButton rbInputScaleCelcius;
    private javax.swing.JRadioButton rbInputScaleFarenheit;
    private javax.swing.JRadioButton rbInputScaleKelvin;
    private javax.swing.JRadioButton rbOutputScaleCelcius;
    private javax.swing.JRadioButton rbOutputScaleFarenheit;
    private javax.swing.JRadioButton rbOutputScaleKelvin;
    private javax.swing.JTextField tfInput;
    private javax.swing.JTextField tfOutput;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package day07birthdays;

import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.DateFormatSymbols;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.Locale;
import java.util.Map;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author user
 */
public class Day07Birthdays extends javax.swing.JFrame {
    
    
  DefaultListModel<Birthday>  modelBirthdaysList = new DefaultListModel<>();
  DefaultListModel<String>  modelCominBirthdaysList = new DefaultListModel<>();
  
  //creating varuable that will help to indicated in we are adding item or editing
    int currentlyEditedItemIndex = -1;   //adding, not editing
    
    //file name to save/export
    final String DATA_FILENAME = "bclass.txt";
    
    //possibilities of sorting
    enum SortOrder {Name, Birthday, DaysTillBirthday}
    
    //initial sorting order by name
    private SortOrder currSortOrder = SortOrder.Name;  //initially null
    
    //create array list to copy model content
    ArrayList<Birthday> bdayList = new ArrayList<>();
    
    //create a map of posiible sortings
    Map<SortOrder, Comparator<Birthday>> sortMap = Map.of(
            SortOrder.Name,Birthday.compareByName,
            SortOrder.Birthday,Birthday.compareByBirthday,
            SortOrder.DaysTillBirthday,Birthday.compareByDaysTillBirthday
    );

    /**
     * Creates new form Day07Birthdays
     */
    public Day07Birthdays() {
        initComponents();
        popupDeleteEdit.setVisible(false);
        loadDataFromFile();
        updateModelFromList();
        lblStatus.setText(lstBirthdays.getModel().getSize() + " bdays known," +
              numBDaysInDays(7) + " upcoming in the next 7 days");
       fileChooser.setFileFilter(new FileNameExtensionFilter("Comma separated documents (*.csv)", "csv"));  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        dlgAddEdit = new javax.swing.JDialog();
        dlgAddEdit_lblName = new javax.swing.JLabel();
        dlgAddEdit_tfName = new javax.swing.JTextField();
        dlgAddEdit_lblBirthday = new javax.swing.JLabel();
        dlgAddEdit_btCancel = new javax.swing.JButton();
        dlgAddEdit_btAddUpdate = new javax.swing.JButton();
        dlgAddEdit_dcBirthday = new com.toedter.calendar.JDateChooser();
        dlgStats = new javax.swing.JDialog();
        dlgStats_TotalNoOfFriends = new javax.swing.JLabel();
        dlgStats_BirthdaysIn7Days = new javax.swing.JLabel();
        dlgStats_BirthdaysPerMonth = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        dlgStats_btDismiss = new javax.swing.JButton();
        dlgStats_lblTotalNoOfBdaysValue = new javax.swing.JLabel();
        dlgStats_BirthdaysIn7DaysValue = new javax.swing.JLabel();
        popupDeleteEdit = new javax.swing.JPopupMenu();
        popupDelete = new javax.swing.JMenuItem();
        popupEdit = new javax.swing.JMenuItem();
        fileChooser = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstBirthdays = new javax.swing.JList<>();
        lblStatus = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        miFile = new javax.swing.JMenu();
        miFileExport = new javax.swing.JMenuItem();
        miFileExit = new javax.swing.JMenuItem();
        miSortBy = new javax.swing.JMenu();
        rbSortByName = new javax.swing.JRadioButtonMenuItem();
        rbSortByBirthday = new javax.swing.JRadioButtonMenuItem();
        rbSortByDaysTillBirthday = new javax.swing.JRadioButtonMenuItem();
        miAdd = new javax.swing.JMenu();
        miStatistics = new javax.swing.JMenu();

        dlgAddEdit.setModal(true);
        dlgAddEdit.setResizable(false);

        dlgAddEdit_lblName.setText("Name:");

        dlgAddEdit_lblBirthday.setText("Birthday:");

        dlgAddEdit_btCancel.setText("Cancel");
        dlgAddEdit_btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgAddEdit_btCancelActionPerformed(evt);
            }
        });

        dlgAddEdit_btAddUpdate.setText("Add");
        dlgAddEdit_btAddUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgAddEdit_btAddUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dlgAddEditLayout = new javax.swing.GroupLayout(dlgAddEdit.getContentPane());
        dlgAddEdit.getContentPane().setLayout(dlgAddEditLayout);
        dlgAddEditLayout.setHorizontalGroup(
            dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgAddEditLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(dlgAddEditLayout.createSequentialGroup()
                        .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dlgAddEdit_lblBirthday)
                            .addComponent(dlgAddEdit_lblName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dlgAddEdit_tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dlgAddEdit_dcBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(dlgAddEditLayout.createSequentialGroup()
                        .addComponent(dlgAddEdit_btCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(38, 38, 38)
                        .addComponent(dlgAddEdit_btAddUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        dlgAddEditLayout.setVerticalGroup(
            dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgAddEditLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dlgAddEdit_lblName)
                    .addComponent(dlgAddEdit_tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dlgAddEdit_lblBirthday)
                    .addComponent(dlgAddEdit_dcBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(dlgAddEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dlgAddEdit_btCancel)
                    .addComponent(dlgAddEdit_btAddUpdate))
                .addContainerGap(135, Short.MAX_VALUE))
        );

        dlgStats.setModal(true);
        dlgStats.setResizable(false);

        dlgStats_TotalNoOfFriends.setText("Total no of friends:");

        dlgStats_BirthdaysIn7Days.setText("Birthdays coming in 7 days:");

        dlgStats_BirthdaysPerMonth.setText("Birthdays per month:");

        jList2.setModel(modelCominBirthdaysList);
        jList2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jList2);

        dlgStats_btDismiss.setText("Dismiss");
        dlgStats_btDismiss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgStats_btDismissActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dlgStatsLayout = new javax.swing.GroupLayout(dlgStats.getContentPane());
        dlgStats.getContentPane().setLayout(dlgStatsLayout);
        dlgStatsLayout.setHorizontalGroup(
            dlgStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgStatsLayout.createSequentialGroup()
                .addGroup(dlgStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dlgStatsLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(dlgStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dlgStats_BirthdaysPerMonth)
                            .addGroup(dlgStatsLayout.createSequentialGroup()
                                .addComponent(dlgStats_BirthdaysIn7Days)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dlgStats_BirthdaysIn7DaysValue))
                            .addGroup(dlgStatsLayout.createSequentialGroup()
                                .addComponent(dlgStats_TotalNoOfFriends)
                                .addGap(18, 18, 18)
                                .addComponent(dlgStats_lblTotalNoOfBdaysValue))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(dlgStatsLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(dlgStats_btDismiss)))
                .addContainerGap(203, Short.MAX_VALUE))
        );
        dlgStatsLayout.setVerticalGroup(
            dlgStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgStatsLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(dlgStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dlgStats_TotalNoOfFriends)
                    .addComponent(dlgStats_lblTotalNoOfBdaysValue))
                .addGap(18, 18, 18)
                .addGroup(dlgStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dlgStats_BirthdaysIn7Days)
                    .addComponent(dlgStats_BirthdaysIn7DaysValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dlgStats_BirthdaysPerMonth)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(dlgStats_btDismiss)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        popupDelete.setText("Delete");
        popupDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popupDeleteActionPerformed(evt);
            }
        });
        popupDeleteEdit.add(popupDelete);

        popupEdit.setText("Edit");
        popupEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popupEditActionPerformed(evt);
            }
        });
        popupDeleteEdit.add(popupEdit);

        fileChooser.setAcceptAllFileFilterUsed(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lstBirthdays.setModel(modelBirthdaysList);
        lstBirthdays.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstBirthdays.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstBirthdaysMouseClicked(evt);
            }
        });
        lstBirthdays.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstBirthdaysValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstBirthdays);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);
        getContentPane().add(lblStatus, java.awt.BorderLayout.PAGE_END);

        miFile.setText("File");
        miFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miFileActionPerformed(evt);
            }
        });

        miFileExport.setText("Export to .csv ...");
        miFileExport.setName("Export to .csv file"); // NOI18N
        miFileExport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miFileExportMouseClicked(evt);
            }
        });
        miFileExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miFileExportActionPerformed(evt);
            }
        });
        miFile.add(miFileExport);

        miFileExit.setText("Exit");
        miFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miFileExitActionPerformed(evt);
            }
        });
        miFile.add(miFileExit);

        jMenuBar1.add(miFile);

        miSortBy.setText("Sort by");

        buttonGroup1.add(rbSortByName);
        rbSortByName.setSelected(true);
        rbSortByName.setText("Name");
        rbSortByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSortByNameActionPerformed(evt);
            }
        });
        miSortBy.add(rbSortByName);

        buttonGroup1.add(rbSortByBirthday);
        rbSortByBirthday.setText("Birthday");
        rbSortByBirthday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSortByBirthdayActionPerformed(evt);
            }
        });
        miSortBy.add(rbSortByBirthday);

        buttonGroup1.add(rbSortByDaysTillBirthday);
        rbSortByDaysTillBirthday.setText("Days till birthday");
        rbSortByDaysTillBirthday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSortByDaysTillBirthdayActionPerformed(evt);
            }
        });
        miSortBy.add(rbSortByDaysTillBirthday);

        jMenuBar1.add(miSortBy);

        miAdd.setText("Add");
        miAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miAddMouseClicked(evt);
            }
        });
        miAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAddActionPerformed(evt);
            }
        });
        jMenuBar1.add(miAdd);

        miStatistics.setText("Statistics");
        miStatistics.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miStatisticsMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                miStatisticsMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                miStatisticsMouseReleased(evt);
            }
        });
        miStatistics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miStatisticsActionPerformed(evt);
            }
        });
        jMenuBar1.add(miStatistics);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    //method that will copy info from array List to model (already sorted data)
    private void updateModelFromList()
    {
        //sorting
        Collections.sort(bdayList,sortMap.get(currSortOrder));
        
        //clear what's in model
        modelBirthdaysList.clear();
        
        //add new objects from array list to model
        modelBirthdaysList.addAll(bdayList);  //can be also done with for (each) loop
        
    }
    
    
    private void miAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miAddMouseClicked
        dlgAddEdit_btAddUpdate.setText("Add record");       
        
        //get values of selected item to text filed
        currentlyEditedItemIndex = -1;
        
        //cleanup the dialog before showing it
        dlgAddEdit_tfName.setText("");
        //to resize window to fit components
        dlgAddEdit.pack();
        //set location relative to parent, so dialog shows in the center of parent(JFrame)
        dlgAddEdit.setLocationRelativeTo(this);
        //set dialog visible
        dlgAddEdit.setVisible(true); 
    }//GEN-LAST:event_miAddMouseClicked

    
   


    
    private void lstBirthdaysMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstBirthdaysMouseClicked
      //to check if mouse was clicked 2 times and only right button was clicked
        if(evt.getClickCount() == 2 && evt.getButton() == MouseEvent.BUTTON1)
       {
           int index = lstBirthdays.getSelectedIndex();
           if(index != -1)
           {
           //show pop up
            lstBirthdays.setSelectedIndex(lstBirthdays.locationToIndex(evt.getPoint())); //select the item
            popupDeleteEdit.show(lstBirthdays, evt.getX(), evt.getY()); //and show the menu
           }
           
          
       }
    }//GEN-LAST:event_lstBirthdaysMouseClicked

    private void dlgAddEdit_btAddUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgAddEdit_btAddUpdateActionPerformed
         String name = dlgAddEdit_tfName.getText();
         Date birthday = dlgAddEdit_dcBirthday.getDate();
         Birthday bd = null;
         try
         {
             bd = new Birthday(name, birthday);  //throws InvalidDataException
         }
         catch(InvalidDataException ex)
         {
             JOptionPane.showMessageDialog(this,ex.getMessage(),"Input error",  
                       JOptionPane.ERROR_MESSAGE);
         }
         
        if(currentlyEditedItemIndex == -1)
        {
            //add name  and birthday to bdayList
            bdayList.add(bd);
            //update model from list
            updateModelFromList();
        }
        else
        {
            //update in bdayList
            bdayList.set(currentlyEditedItemIndex, bd);
            //update model from list
            updateModelFromList();
           
        }
        
        //hide dialog window
        dlgAddEdit.setVisible(false);
    }//GEN-LAST:event_dlgAddEdit_btAddUpdateActionPerformed

    private void dlgAddEdit_btCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgAddEdit_btCancelActionPerformed
       //when "Cancel" button is pressed to make dialog not visible
      dlgAddEdit.setVisible(false);
    }//GEN-LAST:event_dlgAddEdit_btCancelActionPerformed

    private void popupDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popupDeleteActionPerformed
        int dialogAnswer = JOptionPane.showConfirmDialog (null, "Are you sure you want to delete \n" + lstBirthdays.getSelectedValue() + " record?",
             "Confirmation needed",JOptionPane.YES_NO_OPTION);
        if(dialogAnswer == JOptionPane.YES_OPTION)
        {
            //remove from bdayList
           bdayList.remove(lstBirthdays.getSelectedIndex()); 
           //update model from list
           updateModelFromList();
        }
       
    }//GEN-LAST:event_popupDeleteActionPerformed

    private void popupEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popupEditActionPerformed
        int index = lstBirthdays.getSelectedIndex();
           if(index == -1)
           {
               return; //no selection
           }
            dlgAddEdit_btAddUpdate.setText("Update record");
           
           
            currentlyEditedItemIndex = index;
            
            //cleanup the dialog before showing it
            dlgAddEdit_tfName.setText(lstBirthdays.getSelectedValue().getName());
            dlgAddEdit_dcBirthday.setDate(lstBirthdays.getSelectedValue().getBirthday());
            
            
            //to resize window to fit components
            dlgAddEdit.pack();
            //set location relative to parent, so dialog shows in the center of parent(JFrame)
            dlgAddEdit.setLocationRelativeTo(this);
            //set dialog visible
            dlgAddEdit.setVisible(true);
    }//GEN-LAST:event_popupEditActionPerformed

    private void miStatisticsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miStatisticsActionPerformed
     
    }//GEN-LAST:event_miStatisticsActionPerformed

    
      private String getMonthForInt(int num) {
        String month = "";
        DateFormatSymbols dfs = new DateFormatSymbols();
        String[] monthNames = dfs.getMonths();
        if (num >= 0 && num <= 11 ) {
            month = monthNames[num];
        }
        return month;
    }
      
     private int numBDaysInDays(int days)
     {
         ArrayList<Integer> daysTillBDay = new ArrayList<>();
        
        for (int i =0; i < modelBirthdaysList.size(); i++)  
        { 
            if (modelBirthdaysList.getElementAt(i).getDaysTillBirthday() <= days) 
            { 
               daysTillBDay.add(modelBirthdaysList.getElementAt(i).getDaysTillBirthday());  
            }
            
        }
         return daysTillBDay.size();
     }
    
    private void miStatisticsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miStatisticsMouseClicked
            //number of birthday records
        dlgStats_lblTotalNoOfBdaysValue.setText(lstBirthdays.getModel().getSize() + "");
        
        //number of birthdays coming in next 7 days 
        dlgStats_BirthdaysIn7DaysValue.setText(numBDaysInDays(7)+"");
        
        //birthdays per month
        Calendar cal = Calendar.getInstance();
        int [] months = new int[12];
        for(int i =0; i < modelBirthdaysList.size(); i++)
        {
            cal.setTime(modelBirthdaysList.getElementAt(i).getBirthday());
            int month = cal.get(Calendar.MONTH) ;
            months[month]++;   
        }
        for(int i =0; i< months.length; i++)
        {
            String line = getMonthForInt(i)+ ":" + months[i] + " bdays";
            modelCominBirthdaysList.addElement(line);
        }
        
       
        
        
            //to resize window to fit components
            dlgStats.pack();
            //set location relative to parent, so dialog shows in the center of parent(JFrame)
            dlgStats.setLocationRelativeTo(this);
            //set dialog visible
            dlgStats.setVisible(true);
        
    }//GEN-LAST:event_miStatisticsMouseClicked

    private void dlgStats_btDismissActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgStats_btDismissActionPerformed
       modelCominBirthdaysList.clear();
        dlgStats.setVisible(false);
    }//GEN-LAST:event_dlgStats_btDismissActionPerformed

    private void miFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miFileExitActionPerformed
        dispose();
    }//GEN-LAST:event_miFileExitActionPerformed

    
    private void saveDataToFile(File file) //think of File as path
    {
        try(PrintWriter fileOutput = new PrintWriter(new FileWriter(file, false)))   //append false
        {
            for(int i =0; i < modelBirthdaysList.size(); i++)
                {
                    fileOutput.println(modelBirthdaysList.getElementAt(i).toDataString());
                }
        }
        catch(IOException ex)
        {
            JOptionPane.showMessageDialog(this,"Unable to write to file: \n" + ex.getMessage(),
                    "Fatal error - file access error:",  
                       JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    private void loadDataFromFile() {
        ArrayList<String> errors = new ArrayList<>();
        int lineNo = 0;
        try (Scanner fileInput = new Scanner(new File(DATA_FILENAME))) {
            while (fileInput.hasNextLine()) {
                try {
                    lineNo++;
                    String line = fileInput.nextLine();
                    String array[] = line.split(";");
                    if (array.length != 3) {
                        errors.add("Invalid data structure in line: " + lineNo);
                        continue; // try and read the next line
                    }
                    String name  = array[0]; 
                    Date birthday = Birthday.dateFormat.parse(array[1]); // throws ParseException
                    
                    Birthday bday = new Birthday(name, birthday);  // throws InvalidDataException
                    bdayList.add(bday);
                } catch (ParseException ex) {
                    errors.add("Invalid date format in line: " + lineNo);
                }
            }
        } catch (IOException ex) {
            errors.add("Invalid data structure in line: " + lineNo);
        }
        catch (InvalidDataException ex) {
            errors.add(ex.getMessage());
        }
        if (!errors.isEmpty()) { // show errors to the user
            JOptionPane.showMessageDialog(this, String.join("\n", errors),
                    "Errors reading data file", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    private void exportDataToFile()
    {
        File file = null;
        fileChooser.setDialogTitle("Export to file");
            int returnVal = fileChooser.showSaveDialog(this);
            if(returnVal == fileChooser.APPROVE_OPTION)
            {
                file = fileChooser.getSelectedFile();
                if(file == null)
                {
                    return;
                }
                //.means any character, + means 1 or more ({1, infinity}), \\. means dot 
                //{a-zA-Z0-9] it is extension of file, + means 1 or more characters
                if(!file.getName().matches(".+\\.[a-zA-Z0-9]+"))
                {
                    file = new File(file.getParentFile(), file.getName() + ".csv");
                }
            }
            saveDataToFile(file);
            JOptionPane.showMessageDialog(this, "File saved",
                 "Success",JOptionPane.INFORMATION_MESSAGE);   
    }
    
    
    private void miFileExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miFileExportActionPerformed
      if(modelBirthdaysList.isEmpty())
    {
        JOptionPane.showMessageDialog(this,"First add items to be saved",
                  "Action required",  
                       JOptionPane.ERROR_MESSAGE);
        return;
    }
        exportDataToFile();
     
    }//GEN-LAST:event_miFileExportActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
      try
        {
            saveDataToFile(new File(DATA_FILENAME)); //throws InvalidDataException
        }
        catch(InvalidDataException ex)
                {
                        JOptionPane.showMessageDialog(this,ex.getMessage(),"Error",  
                       JOptionPane.ERROR_MESSAGE);
                }
        
        dispose();
    }//GEN-LAST:event_formWindowClosing

    private void rbSortByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSortByNameActionPerformed
       currSortOrder = SortOrder.Name; 
        updateModelFromList();
    }//GEN-LAST:event_rbSortByNameActionPerformed

    private void rbSortByBirthdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSortByBirthdayActionPerformed
       currSortOrder = SortOrder.Birthday; 
        updateModelFromList();
    }//GEN-LAST:event_rbSortByBirthdayActionPerformed

    private void rbSortByDaysTillBirthdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSortByDaysTillBirthdayActionPerformed
        currSortOrder = SortOrder.DaysTillBirthday; 
        updateModelFromList();
    }//GEN-LAST:event_rbSortByDaysTillBirthdayActionPerformed

    private void miStatisticsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miStatisticsMousePressed
      
    }//GEN-LAST:event_miStatisticsMousePressed

    private void miStatisticsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miStatisticsMouseReleased
        
    }//GEN-LAST:event_miStatisticsMouseReleased

    private void miAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAddActionPerformed
       
    }//GEN-LAST:event_miAddActionPerformed

    private void lstBirthdaysValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstBirthdaysValueChanged
      lblStatus.setText(lstBirthdays.getModel().getSize() + " bdays known," +
              numBDaysInDays(7) + " upcoming in the next 7 days");
    }//GEN-LAST:event_lstBirthdaysValueChanged

    private void miFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miFileActionPerformed
       
    }//GEN-LAST:event_miFileActionPerformed

    private void miFileExportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miFileExportMouseClicked
       exportDataToFile();
    }//GEN-LAST:event_miFileExportMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Day07Birthdays.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Day07Birthdays.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Day07Birthdays.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Day07Birthdays.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Day07Birthdays().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JDialog dlgAddEdit;
    private javax.swing.JButton dlgAddEdit_btAddUpdate;
    private javax.swing.JButton dlgAddEdit_btCancel;
    private com.toedter.calendar.JDateChooser dlgAddEdit_dcBirthday;
    private javax.swing.JLabel dlgAddEdit_lblBirthday;
    private javax.swing.JLabel dlgAddEdit_lblName;
    private javax.swing.JTextField dlgAddEdit_tfName;
    private javax.swing.JDialog dlgStats;
    private javax.swing.JLabel dlgStats_BirthdaysIn7Days;
    private javax.swing.JLabel dlgStats_BirthdaysIn7DaysValue;
    private javax.swing.JLabel dlgStats_BirthdaysPerMonth;
    private javax.swing.JLabel dlgStats_TotalNoOfFriends;
    private javax.swing.JButton dlgStats_btDismiss;
    private javax.swing.JLabel dlgStats_lblTotalNoOfBdaysValue;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JList<String> jList2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JList<Birthday> lstBirthdays;
    private javax.swing.JMenu miAdd;
    private javax.swing.JMenu miFile;
    private javax.swing.JMenuItem miFileExit;
    private javax.swing.JMenuItem miFileExport;
    private javax.swing.JMenu miSortBy;
    private javax.swing.JMenu miStatistics;
    private javax.swing.JMenuItem popupDelete;
    private javax.swing.JPopupMenu popupDeleteEdit;
    private javax.swing.JMenuItem popupEdit;
    private javax.swing.JRadioButtonMenuItem rbSortByBirthday;
    private javax.swing.JRadioButtonMenuItem rbSortByDaysTillBirthday;
    private javax.swing.JRadioButtonMenuItem rbSortByName;
    // End of variables declaration//GEN-END:variables
}

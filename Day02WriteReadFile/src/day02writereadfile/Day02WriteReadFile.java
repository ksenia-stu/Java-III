
package day02writereadfile;

import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;


public class Day02WriteReadFile extends javax.swing.JFrame {

    /**
     * Creates new form Day02WriteReadFile
     */
    public Day02WriteReadFile() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Day02WriteReadFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Day02WriteReadFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Day02WriteReadFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Day02WriteReadFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
    //ask user to enter their name
    System.out.println("Please enter your name");
    
    //create object scanner
    Scanner scan = new Scanner(System.in);
    
    //save user name into variable name
    String name = scan.nextLine();
    
    //generate random number
    int n  = (int)(Math.random() * 10) + 1;
    
    //create object of FileWriter
    FileWriter fw = null;
        try {
            fw = new FileWriter("out.txt");
        } catch (IOException ex) {
            Logger.getLogger(Day02WriteReadFile.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    //write name into file n times
    for(int i = 1; i < n; i++)
    {
            try { 
                fw.write(name + "\n");
                
            } catch (IOException ex) {
                Logger.getLogger(Day02WriteReadFile.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
        try {
            fw.close();
        } catch (IOException ex) {
            Logger.getLogger(Day02WriteReadFile.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //part 2
        //create object of FileReader
        FileReader fr = new FileReader("out.txt");
        
        //create object of scanner and use scanner to read info from FilwReader
        Scanner input = new Scanner(fr);
        
        //while scanner has next line, output info to console
        while(input.hasNextLine())
        {
            System.out.println(input.nextLine());
        }
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Day02WriteReadFile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}

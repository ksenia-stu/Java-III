/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package day02validation;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class Day02Validation extends javax.swing.JFrame {

    /**
     * Creates new form Day02Validation
     */
    public Day02Validation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        lblName = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        lblPassportNo = new javax.swing.JLabel();
        tfPassportNo = new javax.swing.JTextField();
        lblContinent = new javax.swing.JLabel();
        comboContinent = new javax.swing.JComboBox<>();
        lblGender = new javax.swing.JLabel();
        rbGenderMale = new javax.swing.JRadioButton();
        rbGenderFemale = new javax.swing.JRadioButton();
        rbGenderOther = new javax.swing.JRadioButton();
        lblPets = new javax.swing.JLabel();
        cbPetsFish = new javax.swing.JCheckBox();
        cbPetsPig = new javax.swing.JCheckBox();
        cbPetsOther = new javax.swing.JCheckBox();
        lblHeight = new javax.swing.JLabel();
        lblHeightValue = new javax.swing.JLabel();
        sliderHeight = new javax.swing.JSlider();
        lblDateOfBirth = new javax.swing.JLabel();
        tfDateOfBirth = new javax.swing.JTextField();
        btVerifyAndAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taAddedData = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Validation");
        setResizable(false);

        lblName.setText("Name :");

        tfName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNameActionPerformed(evt);
            }
        });

        lblPassportNo.setText("Passport No :");

        lblContinent.setText("Continent :");

        comboContinent.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please choose...", "Africa", "Europe", "Asia", "America", "Antarctica", "Australia/Oceania" }));

        lblGender.setText("Gender :");

        buttonGroup.add(rbGenderMale);
        rbGenderMale.setSelected(true);
        rbGenderMale.setText("Male");

        buttonGroup.add(rbGenderFemale);
        rbGenderFemale.setText("Female");

        buttonGroup.add(rbGenderOther);
        rbGenderOther.setText("Other");

        lblPets.setText("Pets :");

        cbPetsFish.setText("Fish");

        cbPetsPig.setText("Pig");

        cbPetsOther.setText("Other");

        lblHeight.setText("Height :");

        lblHeightValue.setText("150 cm");
        lblHeightValue.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                lblHeightValueComponentShown(evt);
            }
        });
        lblHeightValue.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                lblHeightValueInputMethodTextChanged(evt);
            }
        });

        sliderHeight.setMajorTickSpacing(10);
        sliderHeight.setMaximum(250);
        sliderHeight.setMinimum(100);
        sliderHeight.setMinorTickSpacing(1);
        sliderHeight.setSnapToTicks(true);
        sliderHeight.setValue(150);
        sliderHeight.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderHeightStateChanged(evt);
            }
        });

        lblDateOfBirth.setText("Date of Birth :");

        tfDateOfBirth.setText("YYYY-mm-dd");

        btVerifyAndAdd.setText("Verify and add below");
        btVerifyAndAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerifyAndAddActionPerformed(evt);
            }
        });

        taAddedData.setColumns(20);
        taAddedData.setRows(5);
        taAddedData.setText("Your data will be added here");
        jScrollPane1.setViewportView(taAddedData);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblDateOfBirth)
                                    .addGap(18, 18, 18)
                                    .addComponent(tfDateOfBirth))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblContinent)
                                    .addGap(18, 18, 18)
                                    .addComponent(comboContinent, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblPassportNo)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfPassportNo))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblName)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblGender)
                                        .addComponent(lblPets))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(cbPetsFish)
                                            .addGap(29, 29, 29)
                                            .addComponent(cbPetsPig)
                                            .addGap(42, 42, 42)
                                            .addComponent(cbPetsOther))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(rbGenderMale)
                                            .addGap(18, 18, 18)
                                            .addComponent(rbGenderFemale)
                                            .addGap(27, 27, 27)
                                            .addComponent(rbGenderOther)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblHeight)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblHeightValue)
                                .addGap(18, 18, 18)
                                .addComponent(sliderHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(btVerifyAndAdd))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassportNo)
                    .addComponent(tfPassportNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblContinent)
                    .addComponent(comboContinent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender)
                    .addComponent(rbGenderMale)
                    .addComponent(rbGenderFemale)
                    .addComponent(rbGenderOther))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPets)
                    .addComponent(cbPetsFish)
                    .addComponent(cbPetsPig)
                    .addComponent(cbPetsOther))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblHeight)
                        .addComponent(lblHeightValue))
                    .addComponent(sliderHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDateOfBirth)
                    .addComponent(tfDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(btVerifyAndAdd)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tfNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNameActionPerformed

    //validate name
    private boolean validateName(String name)
       {
        
        //regex to check name
         final String NAME_PATTERN = "[-\\ a-zA-Z]{1,50}";
  
        // Return true if the name matches the name regex 
         return name.matches(NAME_PATTERN);
        
       }
    
    //validate passport no
    private boolean validatePassportNo(String passportNo)
       {
        //regex to check passport no
     final String PASSPORTNO_PATTERN = "[A-Z]{2}(?!^0+$)[0-9]{6}";
    
     // Return true if the passportNo matches the passport number regex 
     return passportNo.matches(PASSPORTNO_PATTERN);
        
       }
    
    
    // validate continent
       private boolean validateContinent()
       {
           return comboContinent.getSelectedIndex() != 0;
       }
     
       
    //validate date (returns null if all is fine, otherwise string describing problem
     private String validateDate(String DOB)
     {
         try
         {
             SimpleDateFormat format = new SimpleDateFormat("yyyy-mm-dd");
             Date date = format.parse(DOB);
             if (!date.after(format.parse("1900-01-01")) || !date.before(format.parse("2101-01-01")))
                 return "Year must be between 1900 and 2100";
         }
         catch (ParseException ex)
         {
              return "Wrong date: " + ex.getMessage();
         }
         return null;
     }
    
       //print results
     private void printResults()
       {
    
        //gender (radion buttons)
        String gender = "";
           if (rbGenderMale.isSelected()){
               gender = "male";
           } 
           else if (rbGenderFemale.isSelected()){
               gender = "female";
           }
           else if (rbGenderOther.isSelected()){
               gender = "n/a,other";
           }
           else {
               //internal error
               JOptionPane.showMessageDialog(this, "Unable to find selected radio button", "Internal error",JOptionPane.ERROR_MESSAGE);
           }
           
           
           // check boxes (pets)
           ArrayList<String> petsList = new ArrayList<>();
    
            if(cbPetsFish.isSelected())
            {
                petsList.add("fish");   //add "fish" to petsList ArrayList
            }
            //if again because check boxes are independent
            if(cbPetsPig.isSelected())
            {
                petsList.add("pig");   //add "pig" to petsList ArrayList
            }
            if(cbPetsOther.isSelected())
            {
                petsList.add("other");  //add "other" to petsList ArrayList 
            }
            //after that we receive ArrayList with 0,1,2 or 3 strings

            //join() takes an array of items and a specified by us separator and returns a String with array items separated by this separator
             String pets = String.join(",",petsList);




    
        //create String data to display in text area
        String data = String.format("Name: %s%nPassportNo: %s%nContinent: %s%n"
                + "Gender: %s%nPets: %s%nHeight: %d%nDate of birth: %s", 
                tfName.getText(), tfPassportNo.getText(), comboContinent.getSelectedItem(), gender, pets,
                sliderHeight.getValue(),tfDateOfBirth.getText());

             taAddedData.setText(data);
       }
       
       
    
    private void btVerifyAndAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerifyAndAddActionPerformed
    //check for validation
    try
    {
    if(validateName(tfName.getText()) && validatePassportNo(tfPassportNo.getText()) && validateContinent()
            && validateDate(tfDateOfBirth.getText()) == null)
    {
        printResults();
    }
    //if name does not validate
    else if (!validateName(tfName.getText()))
           {
               JOptionPane.showMessageDialog(this,"Name does not meet requirements:\n"
                       + "must be 1-50 characters \n only letters, digits, spaces and minus sign allowed", "Input error",  //"Input error" is the title of the error window
                       JOptionPane.ERROR_MESSAGE);
           }

    //if passport no does not validate
    else if (!validatePassportNo(tfPassportNo.getText()))
           {
               JOptionPane.showMessageDialog(this,"Passport number does not meet requirements:\n"
                       + "must start with two capital letters followed by 6 digits ", "Input error",  //"Input error" is the title of the error window
                       JOptionPane.ERROR_MESSAGE);
           }

    //if continent does not validate
    else if (!validateContinent())
          {
             JOptionPane.showMessageDialog(this,"Please select continent", "Selection error",  //"Input error" is the title of the error window
                       JOptionPane.ERROR_MESSAGE); 
          }
    else if ( validateDate(tfDateOfBirth.getText()) != null)
          {
             JOptionPane.showMessageDialog(this, validateDate(tfDateOfBirth.getText()), "Information",  
                       JOptionPane.INFORMATION_MESSAGE); 
          }
    }
    catch(Exception ex)
    {
        JOptionPane.showMessageDialog(this,"Something went wrong", "Error",  
                       JOptionPane.ERROR_MESSAGE);
    }
    
     
       
    }//GEN-LAST:event_btVerifyAndAddActionPerformed

    private void lblHeightValueInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_lblHeightValueInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_lblHeightValueInputMethodTextChanged

    private void lblHeightValueComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_lblHeightValueComponentShown
            // TODO add your handling code here:
    }//GEN-LAST:event_lblHeightValueComponentShown

    private void sliderHeightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderHeightStateChanged
        //display height as user moves slider bar
        //click slider > events > change > state changed
     lblHeightValue.setText((sliderHeight.getValue()) + " cm");
    }//GEN-LAST:event_sliderHeightStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Day02Validation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Day02Validation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Day02Validation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Day02Validation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Day02Validation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btVerifyAndAdd;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JCheckBox cbPetsFish;
    private javax.swing.JCheckBox cbPetsOther;
    private javax.swing.JCheckBox cbPetsPig;
    private javax.swing.JComboBox<String> comboContinent;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblContinent;
    private javax.swing.JLabel lblDateOfBirth;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblHeightValue;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassportNo;
    private javax.swing.JLabel lblPets;
    private javax.swing.JRadioButton rbGenderFemale;
    private javax.swing.JRadioButton rbGenderMale;
    private javax.swing.JRadioButton rbGenderOther;
    private javax.swing.JSlider sliderHeight;
    private javax.swing.JTextArea taAddedData;
    private javax.swing.JTextField tfDateOfBirth;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfPassportNo;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quiz3booksandauthors;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.sql.*;
import java.text.ParseException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.sql.rowset.serial.SerialBlob;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author user
 */
public class Quiz3BooksAndAuthors extends javax.swing.JFrame {

    //Create instance of Database
    Database db;

    //Cover
    Blob inputPhoto;
    BufferedImage currentImage;

    DefaultListModel<String> modelAuthorsList = new DefaultListModel<>();
    DefaultListModel<String> modelBooksList = new DefaultListModel<>();

    /**
     * Creates new form Quiz3BooksAndAuthors
     */
    public Quiz3BooksAndAuthors() {
        initComponents();

        //TRY TO ESTABLISH CONNECTION WITH DATABASE SERVER
        try {
            db = new Database();

        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to connect: " + ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
        }

        loadBooksFromDatabase();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        dlgAuth = new javax.swing.JDialog();
        dlgAuth_lblName = new javax.swing.JLabel();
        dlgAuth_tfName = new javax.swing.JTextField();
        dlgAuth_btAdd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstAuthors = new javax.swing.JList<>();
        dlgAuth_btSaveAuth = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstBooks = new javax.swing.JList<>();
        lblTitle = new javax.swing.JLabel();
        tfTitle = new javax.swing.JTextField();
        lblISBN = new javax.swing.JLabel();
        tfISBN = new javax.swing.JTextField();
        lblPubDate = new javax.swing.JLabel();
        tfPubDate = new javax.swing.JTextField();
        lblCoverText = new javax.swing.JLabel();
        lblCover = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblAuthors = new javax.swing.JLabel();
        btChooseAuthors = new javax.swing.JButton();
        btAddBook = new javax.swing.JButton();

        dlgAuth.setModal(true);
        dlgAuth.setResizable(false);

        dlgAuth_lblName.setText("Name:");

        dlgAuth_btAdd.setText("Add");
        dlgAuth_btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgAuth_btAddActionPerformed(evt);
            }
        });

        lstAuthors.setModel(modelAuthorsList);
        jScrollPane2.setViewportView(lstAuthors);

        dlgAuth_btSaveAuth.setText("Save authors to book");
        dlgAuth_btSaveAuth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlgAuth_btSaveAuthActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dlgAuthLayout = new javax.swing.GroupLayout(dlgAuth.getContentPane());
        dlgAuth.getContentPane().setLayout(dlgAuthLayout);
        dlgAuthLayout.setHorizontalGroup(
            dlgAuthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgAuthLayout.createSequentialGroup()
                .addGroup(dlgAuthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dlgAuthLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(dlgAuthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addGroup(dlgAuthLayout.createSequentialGroup()
                                .addComponent(dlgAuth_lblName)
                                .addGap(18, 18, 18)
                                .addComponent(dlgAuth_tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(dlgAuth_btAdd))))
                    .addGroup(dlgAuthLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(dlgAuth_btSaveAuth)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        dlgAuthLayout.setVerticalGroup(
            dlgAuthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgAuthLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(dlgAuthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dlgAuth_lblName)
                    .addComponent(dlgAuth_tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dlgAuth_btAdd))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dlgAuth_btSaveAuth)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        lstBooks.setModel(modelBooksList);
        lstBooks.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(lstBooks);

        lblTitle.setText("Title:");

        lblISBN.setText("ISBN:");

        lblPubDate.setText("Pub Date:");

        lblCoverText.setText("Cover:");

        lblCover.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCover.setText("Click to select");
        lblCover.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblCover.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCoverMouseClicked(evt);
            }
        });

        jLabel1.setText("Authors:");

        lblAuthors.setText("jLabel2");

        btChooseAuthors.setText("Choose authors");
        btChooseAuthors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btChooseAuthorsActionPerformed(evt);
            }
        });

        btAddBook.setText("Add book");
        btAddBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblISBN)
                                .addComponent(lblTitle))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tfISBN)
                                .addComponent(tfTitle)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblPubDate)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(tfPubDate, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(lblAuthors, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCoverText)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCover, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btAddBook, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btChooseAuthors, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTitle)
                            .addComponent(tfTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblISBN)
                            .addComponent(tfISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPubDate)
                            .addComponent(tfPubDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCoverText)
                            .addComponent(lblCover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblAuthors))
                .addGap(18, 18, 18)
                .addComponent(btChooseAuthors)
                .addGap(18, 18, 18)
                .addComponent(btAddBook)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loadBooksFromDatabase() {

        try {
            ArrayList<String> list = db.getAllBooks();
            modelBooksList.clear();
            modelBooksList.addAll(list);

        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to connect: " + ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
        }
    }


    private void btAddBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddBookActionPerformed

        try {
            String title = tfTitle.getText(); //title
            String isbn = tfISBN.getText(); //isbn
            if (db.getBookIsbns().contains(isbn)) {

                JOptionPane.showMessageDialog(this, "This isbn already exists, please enter another one");
                return;

            }
            Date pubDate = Book.dateFormat.parse(tfPubDate.getText()); //pubDate  //ParseException

            ArrayList<String> authorList = new ArrayList<>();

            for (int i = 0; i < modelAuthorsList.size(); i++) {
                authorList.add(modelAuthorsList.getElementAt(i));
            }
            Book book = new Book(0, title, isbn, pubDate, inputPhoto, authorList);

            int recordIndex = db.addBook(book);

            for (int i = 0; i < authorList.size(); i++) {
                int bookId = recordIndex;
                String name = authorList.get(i);
                Author author = new Author(0, bookId, name);
                db.addAuthor(author);
            }

            loadBooksFromDatabase();
        } catch (ParseException | InvalidDataException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to add book: " + ex.getMessage(), "Internal error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to connect: " + ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btAddBookActionPerformed

    private void lblCoverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCoverMouseClicked
        fileChooser.setFileFilter(new FileNameExtensionFilter("Image files", "jpg", "jpeg", "png", "gif"));
        fileChooser.setDialogTitle("Select an image");

        try {

            if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {

                File chosenFile = fileChooser.getSelectedFile();
                currentImage = ImageIO.read(chosenFile);
                Image scaledImg = currentImage.getScaledInstance(lblCover.getWidth(), lblCover.getHeight(), Image.SCALE_SMOOTH);
                lblCover.setIcon(new ImageIcon(scaledImg));
                inputPhoto = new SerialBlob(Files.readAllBytes(chosenFile.toPath()));;
            }
        } catch (SQLException | IOException ex) {
            JOptionPane.showMessageDialog(this, "Error opening image file: " + ex.getMessage(),
                    "File error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_lblCoverMouseClicked

    private void dlgAuth_btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgAuth_btAddActionPerformed
        String name = dlgAuth_tfName.getText();
        if (name.equals("")) {
            JOptionPane.showMessageDialog(this, "Name cannot be empty ",
                    "Input required", JOptionPane.ERROR_MESSAGE);
            return;
        }

        modelAuthorsList.addElement(name);
        dlgAuth_tfName.setText("");

    }//GEN-LAST:event_dlgAuth_btAddActionPerformed

    private void btChooseAuthorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btChooseAuthorsActionPerformed
        dlgAuth_tfName.setText("");
        modelAuthorsList.clear();

        dlgAuth.pack();
        dlgAuth.setLocationRelativeTo(this);
        dlgAuth.setVisible(true);
    }//GEN-LAST:event_btChooseAuthorsActionPerformed

    private ArrayList<String> getAuthorsFromInput() {
        ArrayList<String> authors = new ArrayList<>();
        if (modelAuthorsList.size() != 0) {
            for (int i = 0; i < modelAuthorsList.size(); i++) {
                authors.add(modelAuthorsList.elementAt(i));
            }

        } else {
            JOptionPane.showMessageDialog(this, "Add at least one author ",
                    "Input required", JOptionPane.ERROR_MESSAGE);
        }
        return authors;
    }

    private void dlgAuth_btSaveAuthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlgAuth_btSaveAuthActionPerformed

        getAuthorsFromInput();

        lblAuthors.setText(getAuthorsFromInput().toString());

        dlgAuth.setVisible(false);
    }//GEN-LAST:event_dlgAuth_btSaveAuthActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Quiz3BooksAndAuthors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Quiz3BooksAndAuthors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Quiz3BooksAndAuthors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Quiz3BooksAndAuthors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Quiz3BooksAndAuthors().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddBook;
    private javax.swing.JButton btChooseAuthors;
    private javax.swing.JDialog dlgAuth;
    private javax.swing.JButton dlgAuth_btAdd;
    private javax.swing.JButton dlgAuth_btSaveAuth;
    private javax.swing.JLabel dlgAuth_lblName;
    private javax.swing.JTextField dlgAuth_tfName;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAuthors;
    private javax.swing.JLabel lblCover;
    private javax.swing.JLabel lblCoverText;
    private javax.swing.JLabel lblISBN;
    private javax.swing.JLabel lblPubDate;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JList<String> lstAuthors;
    private javax.swing.JList<String> lstBooks;
    private javax.swing.JTextField tfISBN;
    private javax.swing.JTextField tfPubDate;
    private javax.swing.JTextField tfTitle;
    // End of variables declaration//GEN-END:variables
}
